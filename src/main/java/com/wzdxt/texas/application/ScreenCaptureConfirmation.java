package com.wzdxt.texas.application;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.wzdxt.texas.business.display.ScreenParam;
import com.wzdxt.texas.business.display.util.RobotUtil;
import lombok.NonNull;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.config.ConfigurableBeanFactory;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.*;
import org.springframework.stereotype.Component;

import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;

/**
 * Created by dai_x on 17-9-13.
 */
@Component
@Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE)
public class ScreenCaptureConfirmation {
    @Autowired
    RobotUtil robotUtil;
    private JFrame frame;
    private JPanel panel;
    private JButton confirmButton;
    private JLabel imageLabel;

    public ScreenCaptureConfirmation(@NonNull ScreenParam sp) {
        init();
        showScreenCapture(sp);
    }

    public ScreenCaptureConfirmation() {
        init();
    }

    private void init() {
        frame = new JFrame();
        frame.add(panel);
        frame.setTitle("Minesweeper");
        bindEvent();
    }

    private void repaint() {
        frame.setVisible(true);
        frame.setResizable(false);
        frame.pack();
        EventQueue.invokeLater(() -> frame.setLocationRelativeTo(null));
    }

    private void bindEvent() {
        confirmButton.addActionListener(e -> frame.dispose());
    }

    public void showScreenCapture(ScreenParam sp) {
        BufferedImage bi = robotUtil.screenCapture(sp.getGameX1(), sp.getGameY1(), sp.getGameX2(), sp.getGameY2());
        imageLabel.setText("");
        imageLabel.setIcon(new ImageIcon(bi));
        repaint();
    }

    private void showScreenCapture() {
        BufferedImage bi = robotUtil.screenCapture(100, 100, 700, 500);
        imageLabel.setText("");
        imageLabel.setIcon(new ImageIcon(bi));
        repaint();
    }

    public static void main(String[] args) {
        EventQueue.invokeLater(ScreenCaptureConfirmation::new);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        confirmButton = new JButton();
        confirmButton.setText("确定");
        panel.add(confirmButton, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setEnabled(true);
        label1.setText("请确保截屏位置正常，否则退出后重试");
        label1.setVerticalAlignment(0);
        label1.setVerticalTextPosition(0);
        panel.add(label1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        imageLabel = new JLabel();
        imageLabel.setText("Label");
        panel.add(imageLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}
